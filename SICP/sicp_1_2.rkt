#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 65 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 9 #"Consolas\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 23 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 510 0 17 3 24 #";;#lang planet neil/sicp"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Exercise 1.9"
0 0 23 29 1 #"\n"
0 0 17 3 57 #";; Each of the following two procedures defines a method "
0 0 23 29 1 #"\n"
0 0 17 3 63
#";; for adding two positive integers in terms of the procedures "
0 0 23 29 1 #"\n"
0 0 17 3 59
#";; inc, which increments its argument by 1, and dec, which "
0 0 23 29 1 #"\n"
0 0 17 3 32 #";; decrements its argument by 1."
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 66
#";; Using the substitution model, illustrate the process generated "
0 0 23 29 1 #"\n"
0 0 17 3 64
#";; by each procedure in evaluating (+ 4 5). Are these processes "
0 0 23 29 1 #"\n"
0 0 17 3 26 #";; iterative or recursive?"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(define (inc x) (+ x 1))"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(define (dec x) (- x 1))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";(define (plus a b)"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";  (if (= a 0) "
0 0 23 29 1 #"\n"
0 0 17 3 8 #";      b"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";      (inc (plus (dec a) b))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";(plus 4 5)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";; Using substition: This process is linearly recursive."
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;               (+ 4 5)"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";; a = 4 <> 0 -> (inc (+ 3 5))"
0 0 23 29 1 #"\n"
0 0 17 3 36 #";; a = 3 <> 0 -> (inc (inc (+ 2 5)))"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; a = 2 <> 0 -> (inc (inc ( inc (+ 1 5))))"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; a = 1 <> 0 -> (inc (inc ( inc (inc (+ 0 5)))))"
0 0 23 29 1 #"\n"
0 0 17 3 43 #";; a = 0      -> (inc (inc ( inc (inc 5))))"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;            -> (inc (inc ( inc 6)))"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";;            -> (inc (inc 7))"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;            -> (inc 8)"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";;            -> 9"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(define (inc x) (+ x 1))"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";(define (dec x) (- x 1))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";(define (plus a b)"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";  (if (= a 0) "
0 0 23 29 1 #"\n"
0 0 17 3 8 #";      b"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";      (plus (dec a) (inc b))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";(plus 4 5)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 58
#";; Using substitution: This process is linearly iterative."
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;               (+ 4 5)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; a = 4 <> 0 -> (+ 3 6)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; a = 3 <> 0 -> (+ 2 7)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; a = 2 <> 0 -> (+ 1 8)"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";; a = 1 <> 0 -> (+ 0 9)"
0 0 23 29 1 #"\n"
0 0 17 3 18 #";; a = 0      -> 9"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; Exercise 1.10"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; The following procedure computes a mathematical function "
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; called Ackermann's function."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";(define (A x y)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";  (cond ((= y 0) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 26 #";        ((= x 0) (* 2 y))"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";        (( = y 1) 2)"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";        (else (A (- x 1) (A x (- y 1) )))"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";        ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";(A 1 10) = 1024 = 2^10"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";(A 2 4) = 2^16"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";(A 3 3) = 2^16"
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; Table of Ackermann functions values"
0 0 23 29 1 #"\n"
0 0 17 3 3 #";; "
0 2          35 17 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0          12 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\1\302\0\0\0\220\b"
 #"\6\0\0\0\233)k\r\0\0\25\\IDATx\234\355\335m\226\333*\22"
 #"\6\340\227\17\t\324Z\314\354\177\27\263"
 #"\31\267\21\6j~\310\262e\267\343$"
 #"\367N\32\307\365>\347\364\271\2318\223\250$D!\300*\3@@DD\244\314"
 #"\177\377\373_\374\347?\3771\6\200\210"
 #"\210\351}@=\30c\4\0\264\306\17"
 #"\254\347\200\3613\376\336\307\321\v\343\327"
 #"\e\377\276\377\267\275\17\206\210\210\250'"
 #"&B\"\"R\215\211\220\210\210T\353\222\b\347i\222\340\214\30\343%N37"
 #"\353\20\21Q7]\22\341\341x4\326Z\0\25\245\3658\2\"\"\242U\267\251"
 #"Q\353<,\200Zk\257C\350j\216A\2341b\316?n\230\324=\31O\203"
 #"[\343wA&e3\3s\360\227k"
 #"\257\361\372\337\307\357\203\256\353\17\354g"
 #"\306\214\30\343$D\35\347`\236\242\370"
 #"\335\265_\177\372\316\16\366[#4\26"
 #"\336\2\250\5\332\246G\347\30$-\31\315\5\210\210\t\16h%AKg\260u"
 #"\0I\351t\300\34\274|V\17\0211"
 #"\0371b\264\312\256\177\f\222\266\370\303"
 #"\270\16\210\363\242\256\37@;!7\v"
 #"\253u\247\306\271\377[\177\212I\307C"
 #"\267\257q\374\321K\260\215\370\267\321\356"
 #"6\nt\303$\217\246G\257#\244\353\350\3502zx\243\247\206V\v\32\0\347"
 #"\34\260\373\257\232\247ci(\315b\34"
 #"G\225\273\265\16K1R\222\1\366\313\4\2004\35\3\203CZL=\307\17c"
 #"\240\361Kl\363\24e\311\25\326\17\360"
 #"\275\17\206\376l?d\375\0\a\240\225"
 #"\23\342\371\302\303\216\30\375\372\317\336O"
 #"\217^;\205\206R\317\235B+\250\0\254\2658v\0341\374?\211\334u"
 #"x\306\251J\b\207\264\230*\325\370\267"
 #"\270\232\377\336\326\36\214\306G\203\363\375"
) 500
(
 #"\r\347\321\363\211\340\273\265rB\205\303"
 #"\300\233\340%\374\321;\357pL&\214\16@\305\222\26T\0\316\373kB{0"
 #"=zI\236\255a\232fY\223\244\205w\n;\tz{s\360\262T\0v\304"
 #"\240\250\211o\263E\237\271\2p\b\203"
 #"\353}H\337f\236\242\234J\273\364u"
 #"j\325\5\2275B\37\273\316\366\375\371"
 #"[\317\372\353\305\276\273\331\37M\217\36"
 #"\216\311\370\3651\22M\32D\326\277\303r\340Dof\216A\322\226\bF\3776"
 #"3\36\277\342x\252f]#\rp\250X\322\247\2325\322zZ\316O\203\212F"
 #">;\207c2\345\2746\270\255\221\243"
 #".]\257\377\37\277\22\353\24\300\366?"
 #"2\362\335\6\211G\273G\3275\263\206"
 #"|\312(\355\275\246E\1\300\334\277\331N*\32\0k\336&D\372\211y\212\262"
 #",\31\r\16!\6U\323\202{\227\201/t\254\221\316\323$\"\0\316\311\3773"
 #"%\344\6\0\ryI\320\262sts8\36\315\326\355\365\274\376\1774\21\3161"
 #"H.\r\260#b\f\273\365\302\335\305~\264{\324\16\353(\2415\2647\234\26"
 #"\275O\376\234\376\325e\236\242\254K\5"
 #":\223\340\34\374u\3\335%1\350h\377\207\343\321,u\333)\271{\"\202\305"
 #"\30\"\226\364\376m\341\366\372G)\25\350}\375\377\350\277\\K^wGz\217"
 #"\3431\231u*\240b9]\237\376\36O\217^w\322\275\343\264\350!-&\216"
 #"\3562G\276T\300\215:n\2\340\372\35\312\317em\37h\31)}\242\367:"
 #"\301w\271\316\222\254O\5\227u\2227\332\31\375\314a)fD\2061F\326'"
 #"\"=I\200\356\257\377\202\372\2\203\200"
 #"\227(\303t\363\275\272\363\266\3529x"
 #"\371\314\25\326G\324\323\361\217\34\37\3130\351.\303\0020~\306\317"
 #"\370\265\306\377ze\230\36L\217n\323\206*\267\224\23\21\321\267y\211"
) 500
(
 #"\357r\36\216\267O|s\f\262\316\236:(\335XEDD\337\344%\22\341\275"
 #"CZT>\252\23\21\321\3673\0\336~q\236\210\210\350\221\327Y#$\"\""
 #"\352\304\3zwMr\327\250\356]c\0\343g\374\214_k\374[\377\17\364,"
 #"\303DDD\364\2\230\b\211\210H5&B\"\"R\215\211\220\210\210Tc\""
 #"$\"\"\325\272%\302\355\305\313\333\v"
 #"\207\267\267\221kq\37\277\226Zl\233"
 #"\2550\253\326\3707\321\353l\377\300}"
 #"\ep\242\251\4\321\34\374M\373\327r\375\267k~\37o\357\376\260K\"\274y"
 #"\311\266\210\t\16h%\251)\314\271\325"
 #"\242\203\217\20\21\3631:\324\254\247\26"
 #"\331\34\203\344\346\21\343\aD\304DoQ\363r[\236K\2019xY\304AA"
 #"\365\241/\246\301I\332\265\1\221j\264"
 #"T\237\230\247(K\26\214a\215\375#\214@\311o}\377\317S\24o\214d\234"
 #"K\354\335}\326\273?\354r\v\266Z"
 #"\326\362Ln\255\310\271\375w_\234\367"
 #"\255\265r[\241\332\16\30mC}\333"
 #"\333\340\326!-\246\326\305l\305\226\327"
 #"\372\214\2Q\22?\260\326\341+\245\302"
 #"\371\1\256\367\301|\263y\212r*\300"
 #"8\370\267*\270\375\313D 0\270\324"
 #"\3416\6\357~\22\266\252\364\321?\210"
 #"\364\5\372\303.\211P\344\256\22\261q"
 #"\252\26+[\23\300\272/\215_C\205\356\207\244\242\355;\6\5Z\311\310& "
 #"hj\370\e\21\b\200r\332\325bTR\213\22X\a\202\203\253X\322\2028M"
 #"R\362\2\361\243\332z\214\257\320\37j"
 #"\274\r_\316\341x4\232\222\300\336\366"
 #"dd\375\240\246R\373\34\203\344b\20\6m\317\202gR\321\0\370\341:5h"
 #"\353\242fi\4\0R\21\23\\\305\222\0222F\214,\263s\321\243?\344"
 #"\331\177\1\3634\211\246i\301\275z"
 #"\322\325\21\314\323$\345\224a\306\240&"
) 500
(
 #"\361?\266\237\32\\\353\221j\231\21\331"
 #"\326\313\212;\257\221\333\202\224\364\354\21"
 #"\370\231\36\375a\227\336\307\334\277\353\373"
 #"<B\264J\36\213\2545@\253_\312~h+B\34\275\221EF\304Q\323Z"
 #"\221\2406\240\346uZ\3603%\344\266"
 #"n\0263.\310\244a\303\220q\352\326"
 #"\204\367Z9\241\332\21\303\266$\346G"
 #"\214\266\241T\35\3\201{\257\320\37v"
 #"\351y\327\315\21\327\3151\353\177-\274"
 #"\226\355s\326\303\241\242l\355\276\235\220"
 #"\233\236\"\304\3634Ip\32\223\340u\323\200\234\177>b\304h\1\353#d\267"
 #"\201\350\255\31\v\277\357\370\333\t\271\351"
 #"\271\377\277t\374\322P\232\276\201\360\305"
 #"\v\364\207\6@\227\267\217\317\301\313g"
 #"\276\356\22u\343\a\312\362\275\235@\317"
 #"\352\23\227\257\220\0\0,\306\20\273,"
 #"\226\367x\373\374\375\265\277p\1R\322"
 #"\267\267\201\236o\337\237\247IJN("
 #"6\242\236\216*\256?p\337\376\373\334"
 #"\377@\277\370\2437\262\354n\1\353\337"
 #"\373\372\317S\224%-\270\277\353\267\270"
 #"{\364\207\373\376\277[\"|\5,\303"
 #"\324?\21\364\306\370\31?\343\327\31\377\276\377W\372,NDD\264b\"$\""
 #"\"\325\230\b\211\210H5\3|\331\265"
 #"JDD\244\202\210\30\277\375\242\367\301"
 #"\364\300\3152\272\27\313\1\306\317\370\31"
 #"\277\326\370\267\376\37\340\324(\21\21)\307DHDD\2521\21\22\21\221jL"
 #"\204DD\244\32\23!\21\21\251\3265\21N\203[\213rjy\353\376\316\34\203"
 #"\270\255(\2511\242\251\26\e\260\273\366"
 #"J\343\337D\277\306\357\206IU\374s"
 #"\3607\327_K\374[\273\177\24\357\355"
 #"=\341\344\335\3122\335\306\347%\356\372"
 #"\374\336\375A\227D\270U\37HEg\331\221y\212\262,\31\360q-L::"
 #"\324\254\247\36\331\34\203\344\346\21\343\271\36"
 #"\233\267\250yA\3246\30\n^\26qP"
) 500
(
 #"Rt\341b\236\242,Y0\206ka^\224\374\326\355\177\253A\2301`|p"
 #"\275\247\301I\332\335\23\"\325\274S\305"
 #"\372y\212r\332\305\27\\\305rZ_"
 #"\301\375\n\375\201\377\256\177\350\2064\224"
 #"f1\216\36%_\337@\257F+\250p\b[\235\21;`\264\t\365m\273\201"
 #"[\207\264\334\334\340\326y\330RT\325"
 #"\247\233\247IJ\251p>\302\225\212\322"
 #"\373\200\276\223\b\344\2460\257\301\333\364"
 #"\370?p8\256UU\326j#\267\237\315S\224S\1\306\360\276%\311\266\3707"
 #"\306X\240\t\246i\226\343\v\364\a]"
 #"\306\242\207\264\230*\325\370\267\274\344?"
 #"\327\232\0\326}\271\371\265T\350\376B"
 #"*\332\276cT\240\225\214l\2\202\262"
 #"\247A`\275\377\aW\261\244\5q\232\244\344\5\342\307.e\310^\202\b\4@"
 #"9\255\305\232\2151b||\333a\341"
 #"\232\370\e\254\265\217\23\177\207\376@\341"
 #"m\370z\16\307\243\321\224\4\366\266'"
 #"#\353\a\2447\35\r\337\233c\220\\\f\302\340z\37J7\251\234\247\307RB"
 #"\306\210QKU\352G\244\242\1\360\303"
 #"u\252\330\326\5\357\266n\276\255\v\177"
 #"\246\5\325\205\207\365\27{\365\a\212["
 #"\337\353\230\247I4M\v\356\325\223\256"
 #"\216p\236&)\247\f3\0065\211\377\336\266^V\334yM\310\26\244\244g\215"
 #"\374\261\375T\261\205\267\3577CtX"
 #"\212Y\327?\305Ds\302\375\206\31\240"
 #"_\177\240\243\367y1\326\32\240\325/"
 #"o;7V\327\345\210\336\310\"#\342\370\276k#_\tj\3j^\247\301>"
 #"SBn@+\tZvO\267rB\265#\206m\211\334\217\30mC\251\357\325"
 #"\361\3772\343`!\252\326\310\255\363_"
 #"b\356\331\37\350\352y_\205\365p\250"
 #"\270l\232m'\344\346\240\344\241\350\262kX_\22\\7"
 #"\r\224\363\250XD\314G\214\30-`}\204\324\305h8"
) 500
(
 #"\27_\6\202\322P\232\276\201\340\205\261"
 #"\360\373\201@;!7\v\377F\333\211\347\30\304\355\326=[-\227u\300W\350"
 #"\17\272\354\32\235c\220\264\354v\213\266"
 #"\214\2242\214\217\"%\275}Gp8&\263\236\203\317\363\e\320-\306\20\365L"
 #"\225\265\23r\3\200\363u\337\336\2\357"
 #"\0024\\\177\355\16K1\321\eY\322"
 #"\347\345\332[\37Q\226\367m\377\363\24"
 #"eI\v\352\366\e-\301\30#\326G\324\323\321\3141HY\322\345|\270\361\343"
 #"\2756\17\31\v/iW\361\301b\f\353\362\300\34\274\364\356\17\f\0\365e8"
 #"\264\306\17\350.\303\0020~\306\317\370"
 #"\265\306\277\357\377\337\347\331\233\210\210\350"
 #"\37`\"$\"\"\325\230\b\211\210H5\3|\331\305ODD\244\202\210\30\277"
 #"\375\242\367\301\364\300\3152\272\27\313\1"
 #"\306\317\370\31\277\326\370\257;X95JDD\3121\21\22\21\221jL\204D"
 #"D\244\32\23!\21\21\251\306DHDD\252uK\204[m\252\355\307\r\223\252"
 #"\257q\3141\210\333\305\377n\265\307~"
 #"f\32\334\315\365\327\26\377&z]\355"
 #"\177\273\356\217\342\275m\23Nz\227e"
 #"\372\2356\372\354~\376\321g\333\313\246"
 #"\367\377\306\357\264\205\277\351\\\276\272."
 #"\211p\16^>\253\307\376\355\373\255\244\267+D\371#\363\24eY2\340\343z"
 #"\16F\207\232\365\324c\233c\220\334<"
 #"b<\327\243\363\0265/\270\257M\366\356\346\340e\21\2077*2\360C[\r"
 #"\302\214\1\343\203x\247\301I\332\265\t"
 #"\221jz\276t\372w\332\350\263\373\371W\356u7n1\257?\373\202\265[\262"
 #"\274I\254\177\331\271\374\et\271\5\17"
 #"K1\333[\305\17\307\243\261\347\362+"
 #"\357V\210\362\207ZA\205\303\260\325]\262\3F\333P\225\244\201CZL"
 #"\335\225\34zT\233\354\335m\225\270"
 #"\235\37\240\241N\375V~*\372\257\375"
) 500
(
 #"\361<E9\25`\34^\247$\327o\265\321g\367\363\37\270\327\377\266s\3717"
 #"x\211\261\250\310\232\0\265\324#kM\0\353p\337J\325\f\4\356I\275\324&"
 #"\323\242\225\214l\2\202\216&\377\234\b\4@9\255e\231\2141bv\265\353^"
 #"\302\2236\372\354~\376\366{\375o8\227/\250\373m8\a/K\5\260\253X"
 #"\255\315\341x4\232\222\300\336\366dd"
 #"\375\240\246\36\343\34\203\344b\20\6\r\317\202\277@*\32\0?\254Sy\37a"
 #"\204\255\313\313,\225\374n\e}v??\372\254\346]\3222^\3424\313\266\306"
 #"\367\231\22r\333\377\231\365\363\37\376\343"
 #"/~._U\227\302\274\2339\6I\271\2p\b\312*\225\357\315\323$\"\300"
 #"\227a\243\2\365\224\2201\"z\35\243"
 #"\240y\232\244\2342\314\370\261\26%\235"
 #"tl\222\371\271\335\323\226\261\360\26("
 #"/2C\362\273m\364\331\375\374\35037~\374\260(\361<MRrB\365?"
 #"\3763_\275\356\271|U\375v\215\236\27\221\e\34B\fj\236\6\0\300Z\3"
 #"\264\372\345m\347Z\246\2067\321\eYdDT5\b\22\324\335\b\177\e\361\267"
 #"\222`\\\220I\331\206!\0\200q/"
 #"\273F\374+m\364\331\375\374\355\367\372"
 #"\v\237\313W\326g\327\350\24eI\v\252\302$\b\0\260\36\16\25e\e\244\265"
 #"\23rsP\362Pt\331\t\247/\t^7:l;\4\267]\323\326G\310n"
 #"s\206*\306\302\333\206R\3177D;!7\v\337q;\355\2636z\371\332\303"
 #"\266\366\366\354~\376\356{\375\5\317\345"
 #"\337\240\313\324h+'T\0@\305\222>\257o\1\267::\306\3031\2319\6"
 #"I\313\26\273\305\30\242\236\1A;!7\0\310H)_\257\277\v\330v\23\323"
 #"{\271\16~\317Z\2021F\254\217\250\247\243"
 #"\231c\220\262\244K[p\343\a\272n\371\177\322"
) 500
(
 #"F?\206\333\303\372\331\375\374\243\317\266"
 #"i\361mv`\373\373\266s\262\376\335\307/\347\340\257;\227\177\1\3@}\31"
 #"\16\255\361\3\272\313\260\0\214\237\3613"
 #"~\255\361\357\373\177>/\23\21\221jL\204DD\244\32\23!\21\21\251f\200"
 #"/;{\211\210\210T\20\21\343\267_\364>\230\36\270YF\367b9\300\370\31"
 #"?\343\327\32\377\315N\335\236\aBDD\324\e\23!\21\21\251\306DHDD"
 #"\2521\21\22\21\221jL\204DD\244"
 #"Z\277\352\23\301\313\265\6\227\21m\365"
 #"\262\346\30\304)\216\177\253\267\2465\376"
 #"M\364k\374nx\275rL\277s\215\236\265\347\37}vyy\265\271\375\371\325"
 #"s\261\35\337\243?\177{\354NB\324"
 #"\331\276\350\327\364\251>\21\203\244\352\257"
 #"\205#\1\324\274\340i\301\3117\262\225"
 #"\240\202\217\3539\30\35jN\320r\263"
 #"\3161Hn\0361\256\305C\243\267\252\256\377f\16^\26qx\305\302\0\277s"
 #"\215\236\265\347_i\353n\\\377\215\355"
 #"g{\341\364\372w\257\311\362&\261NQ\2741\2221`|p\356\246\301I\332"
 #"\35\273H5|\3514=\323\245\372\304!-\327Fi\214\276z\264\255\254%\250"
 #"\266Z,v\300h\23\252\2224ps\375\1X\347aKQUCm\253z\356"
 #"|\204+\25\245\367\1\335\371\255k\364"
 #"\244={y\362\331?\274\361\17\307\265"
 #"B\311Z\264\366\366\263y\212r*\300"
 #"\30\336\277\212\r\375\377\364\37\213\266\262"
 #"\226\23q^M\31\242\326\4\260\356\313"
 #"\0@\264V\221\226\212\266\257\252\255@"
 #"+\31\331\4\204\376w\340\257yr\215"
 #"\236\265\347oo\353\"\20\0\345\264\226"
 #"62fW7\220\350\a\272\335\206\333\34\376g\256\0\34\302\340z\35Jw\207"
 #"\343\321hJ\2{\333\223\221\365\203\232\201\320\34\203\344"
 #"b\376\2326\377\273\327\350Y{~\364\331V\217o\375"
) 500
(
 #"\361\22\247Y.\375CJ\310m\377g"
 #"\326\317\177\370\217KE\3\340\207\217\353\322K]\240u\r\232~M\267Dx<"
 #"\325s\205\356\0w.\320\253\265\261\316"
 #"\323$\232\246\5\367\352)!c\304\370"
 #"\307Jv\277\226y\232\244\2342\314\30"
 #"\376\232\304\377\273\327\350Y{~\364\331"
 #"\355\32a1\351x0\327\376!b\264\373?\263~\376\374\bvO\256\306\302["
 #"\305\263-\364K\272\367>\207c2\376<0\326\322X\2555@\253_\336vn"
 #"l\367\313\361\255\2427\262\310\2108j"
 #"Z\317\21\324\335\23\316\366\304\323J\202"
 #"qA\246\27\3330\364+\327\350Y{\376\366\266n\34,D\325z3\375{}"
 #"v\215\6\177\331\362|\35!Z\370W\334>\367'X\17\207\212\262\345\375vB"
 #"n\16J\36\212.;\1\365%\301u\340Wv;$\267'\36\353#\244.\346"
 #"U\316\305\263kt\371\332\303\266\366\366"
 #"\254=\177w[7\26\3366\224\332v"
 #"\377\236\242\276\205\376\221>\273F\227b"
 #"\2665\200\365w,\306\20\241e\213\363"
 #"\341\230\314\34\203\244\345\363\374\6\3645"
 #"\376\277e\252\354_k'\344\6\0\31"
 #")\345\353[\340]\200\224\244\343\34\274"
 #"\272'\327\350c\270\275D?k\317?"
 #"\372l\236\326\301\360\366t\274\375}\326Gl_\2418\34\217_\332\303<EY"
 #"\322\262n\262\3\200\226`\214\221\355\377"
 #"7\307 eI\227\277\323\215\37j\372\26\372g\f\0\365e8\264\306\17\350."
 #"\303\0020~\306\317\370\265\306\277\357\3779_@DD\2521\21\22\21\221jL"
 #"\204DD\244\232\1\276\354l&\"\"RAD\214\337~\321\373`z\340f\31"
 #"\335\213\345\0\343g\374\214_k\3747;\225{\36\b\21\21QoL\204DD"
 #"\244\32\23!\21\21\251\306DHDD\2521\21\22"
 #"\21\221j]\23\341\345\345\275\306\2101NB|\2557"
) 500
(
 #"\357\377Is\f\342.5\330\214h+A\265\275kVk\374\233\350\327\370\267\227"
 #"\320\23\321\367\353\373Dx~3\274\262"
 #"\352C\353K\203\227\f\370\270\26\17\35\35jN\3202\20\230c\220\334<b\\"
 #"k\314EoQ\363\202\247\5W\337\320\34\274,\342\300\302\bD}u\273\5\347"
 #")\312\222\327\252\327]J`\364\324\n"
 #"*\34\206\255\26\215\0350\332\206\252$"
 #"\r\34\322b\352\256\344\220u^]\r"
 #"\271\255\352\273\363\3\376\216:\365D\357"
 #"\253[\"l\345tN\6\372\276\313\331"
 #"\232\0\326\341>r-\205\211\277\220\212"
 #"\266\257*\256@+\31\331\4\4>\r\22u\327\2470\357\24\345T\32,G\303"
 #"\0\326\232k\232\222\300\336\366dd\375"
 #"\240\246\36\343\34\203\344b\20\6\266~"
 #"\242W\320%\21\326\323r;5\250\334<M\242iZp\257\236\0222F\214J"
 #"\332\302<MRN\31f\fj\22?"
 #"\321\253\373\366\345\271k\247_\261\244\317\335'\ryY7\214\274{5ik\r"
 #"P*\344\356\364\ee\273\206\2427\262\310\2108z\34\325$\5Am_\253\262"
 #"\243%\30\27D\327\271 z\r\337\236"
 #"\b\17\307\343\315M>O\223\224\234\220"
 #"\233\305\30\"\336=\t\2\0\254\207\303"
 #"\202\262-\t\266\23rsj\326\213."
 #"\327\34\332\222 p8\246\207\355\277\330\210z:\2529\17D\257DI\327\373Z"
 #"\16\307dB\30!\347\247\202\317,\30\203\242\251\262vBn\0ZFJ\3539"
 #"0\306\210\361Q\351\0041\21\365d\0\250/\303\2415~@w\31\26\200\3613"
 #"~\306\2575\376}\377\317'B\"\"R\215\211\220\210\210Tc\"$\"\"\325"
 #"\f\0nP \"\"\225D\304\370\355\27\275\17\246\an\226\321\275X\0160~"
 #"\306\317\370\265\306\277\377\36/\247F\211\210H5&"
 #"B\"\"R\215\211\220\210\210Tc\"$\"\"\325"
) 500
(
 #"\230\b\211\210H\265n\365\b\375\366~"
 #"\311\313\217\2278\315j\276\3121\307 n\27\277\17zb\a\200ip7\327_"
 #"[\374\233\350\327\370\3350\251\214\237\350"
 #"\25\364}\"t\1\"b\326\237b\264\274tz\236\242,K\6|\204\210\230\217"
 #"\321\241\346\265\4U\357c\373\16s\f"
 #"\222\233G\214\37\20\21\23\275E\315\v4\r\204\0`\16^\26qp\234\227!"
 #"\352\352\333\3130\21\200VP\341\20\266"
 #"b\264v\300h\23\252\2224pH\313\315\200\307:\17[\n4\25'\236\247I"
 #"J\251p>\302\225\212\322\373\200\210\24"
 #"\343X\264\203\326\4\260\16\367\217\277\322"
 #"\332\303?\377\366\244\242\301\300\250\230\17"
 #"X\265\222\221MPS\203\222\350\225\365\275\r\353\302ZtX\213\25kJ\2{"
 #"\333\223\221\365\203\232z\214s\f\222\213A\30\\\357C!\"tJ\204\207c2"
 #"\345\2746\370\21#F\v\240.\320\272ab\236&\3214-\270WOk\245\372"
 #"\321\353x4\232\247I\312)\303\214\212"
 #"\n1\23\275\270\356k\204\207\343\321D"
 #"\177~\347\247\222\251Ak\rP*\344\356\364\e\253#\31l\2427\262\310\2108"
 #"z\34\325$\5Am@\315\2377\357:DK0.\210\256sA\364\32\372|"
 #"}\"\370\313v\361y\212R\352z(^\313\3669\353\341PQ\266\274\337N\310"
 #"\315A\311C\21\346i\222\3404&\301"
 #"\333\331\220\375\214\210\365\21R\27\243\351"
 #"\\\20\275\212.O\204\207\245\230\355{d\353\357X\214!bI::\201\3031"
 #"\2319\6I\313\366T\260\306\257f\252\254\235\220\e\0d\244\224\257OF.@"
 #"J\322q\16\210\350e\30\0\352\313p"
 #"h\215\37\320]\206\5`\374\214\237\361"
 #"k\215\177\337\377+\231\214#\"\"z\214\211\220\210\210Tc\"$\""
 #"\"\325\f\0\245\337`#\"\"\355\270FHDD\352\31\265\2574!"
) 25 #"\"\"\2\360?\1v3\340\220\316\373h\0\0\0\0IEND\256B`\202"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";; (define (f n) (A 0 n)) gives 2 * n"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";; (define (g n) (A 1 n)) gives 2^n"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";; (define (h n) (A 2 n)) gives 2^(2^(2^... n times in total"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";; Tree recursion"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; The Fibonacci numbers computed recursively:"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";(define (fib n)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";  (cond ((= n 0) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";        ((= n 1) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";        (else (+ (fib (- n 1)) (fib (- n 2))))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 46 #";; The Fibonacci numbers computed iteratively:"
0 0 23 29 1 #"\n"
0 0 17 3 30 #";( define (fib-iter a b count)"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";   (if (= count 0)"
0 0 23 29 1 #"\n"
0 0 17 3 9 #";       b"
0 0 23 29 1 #"\n"
0 0 17 3 42 #";       (fib-iter (+ a b) a (- count 1))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";(define (fib n)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";  (fib-iter 1 0 n))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";(fib 7)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; Example: Counting change"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; Number of coin denominations"
0 0 23 29 1 #"\n"
0 0 17 3 52 #";; n = 5 (penny, nickel, dime, quarter, half-dollar)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 45 #";(define (count-change amount) (cc amount 5))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";(define (fst-denom kinds-of-coins)"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";  (cond ((= kinds-of-coins 1) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 33 #";        ((= kinds-of-coins 2) 5)"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";        ((= kinds-of-coins 3) 10)"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";        ((= kinds-of-coins 4) 25)"
0 0 23 29 1 #"\n"
0 0 17 3 34 #";        ((= kinds-of-coins 5) 50)"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";        ))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 35 #";(define (cc amount kinds-of-coins)"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";  (cond ((= amount 0) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 51 #";        ((or (< amount 0) (= kinds-of-coins 0)) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";        (else "
0 0 23 29 1 #"\n"
0 0 17 3 13 #";         (+ "
0 0 23 29 1 #"\n"
0 0 17 3 49 #";               (cc amount (- kinds-of-coins 1)) "
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";               (cc (- amount (fst-denom kinds-of-coins)) kinds-of-c"
 #"oins))"
) 0 0 23 29 1 #"\n"
0 0 17 3 11 #";         )"
0 0 23 29 1 #"\n"
0 0 17 3 10 #";        )"
0 0 23 29 1 #"\n"
0 0 17 3 4 #";  )"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; Exercise 1.11"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; Recursive version"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";(define (f n)"
0 0 23 29 1 #"\n"
0 0 17 3 14 #";  (if (< n 3)"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";      n"
0 0 23 29 1 #"\n"
0 0 17 3 60
#";      (+ (f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";(f 2)"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";(f 3)"
0 0 23 29 1 #"\n"
0 0 17 3 6 #";(f 4)"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";; Iterative version"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 2 #"n)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"f-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn1"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn2"
0 0 17 3 1 #" "
0 0 17 3 4 #"fn3)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 2 #"c)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn1"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn2"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 5 #"fn3))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 6 #"f-iter"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn1"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn2"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn3"
0 0 17 3 3 #")) "
0 0 17 3 3 #"fn1"
0 0 17 3 1 #" "
0 0 17 3 6 #"fn2)))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 2 #"3)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      n"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 6 #"f-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 5 #"0 )))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; cleaner solution"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 2 #"n)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 6 #"f-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn1"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn2"
0 0 17 3 1 #" "
0 0 17 3 4 #"fn3)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 5 #"    ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #">"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #" "
0 0 17 3 2 #"n)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 11 #"        fn1"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 6 #"f-iter"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"c"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn1"
0 0 17 3 2 #" ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn2"
0 0 17 3 3 #") ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 3 #"fn3"
0 0 17 3 3 #")) "
0 0 17 3 3 #"fn1"
0 0 17 3 1 #" "
0 0 17 3 6 #"fn2)))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 2 #"3)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      n"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 7 #"      ("
0 0 17 3 6 #"f-iter"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 9 #"0 )))    "
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 16 #";; Exercise 1.12"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 68
#";; n.b., no parameter checking or safeguards against illegal values."
0 0 23 29 1 #"\n"
0 0 17 3 21 #";(define (pascal i j)"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";  (if (or (= j 0) (= j i))"
0 0 23 29 1 #"\n"
0 0 17 3 8 #";      1"
0 0 23 29 1 #"\n"
0 0 17 3 56 #";      (+ (pascal (- i 1) (- j 1)) (pascal (- i 1) j))))"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 49 #";; This version returns 0 for i or j < 0 or j < i"
0 0 23 29 1 #"\n"
0 0 17 3 21 #";(define (pascal i j)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"  ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" (("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 1 #"<"
0 0 17 3 1 #" "
0 0 17 3 16 #"i 0) (< j 0)) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 20 #";        ((> j i) 0)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 10 #"        (("
0 0 17 3 2 #"or"
0 0 17 3 2 #" ("
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 16 #"j 0) (= j i)) 1)"
0 0 23 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 9 #"        ("
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 2 #" ("
0 0 17 3 6 #"pascal"
0 0 17 3 2 #" ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 3 #") ("
0 0 17 3 1 #"-"
0 0 17 3 1 #" "
0 0 17 3 1 #"j"
0 0 17 3 1 #" "
0 0 17 3 24 #"1)) (pascal (- i 1) j)))"
0 0 23 29 1 #"\n"
0 0 17 3 11 #";        ))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0           0
